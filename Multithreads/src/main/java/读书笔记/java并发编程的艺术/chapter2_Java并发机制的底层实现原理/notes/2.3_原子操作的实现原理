2.处理器如何实现原子操作
    2.1使用总线锁保证原子性。总线锁使用处理器童工的一个lock#信号，当一个处理器在总线上输出此信号时了其他处理器的请求将被阻塞住，该处理器独占共享内存。
    总线锁把cpu和内存之间的通信锁住了，这使得锁定期间，其他处理器不能操作其他内存地址的数据。
    2.2使用缓存锁保证原子性。在处理器的高速缓存行（L1, L2, L3）里处理原子操作,且缓存锁定期间，其他处理器就无法同时缓存同一数据，结合缓存一致性来达到原子操作。
    2.3两种情况下处理器不会使用缓存锁定。
        2.3.1操作数据不能被缓存到处理器内部，或操作的数据跨多个缓存行，使用总线锁定。
        2.3.2有些处理器不支持缓存锁定。

3.java如何实现原子操作
    3.1循环CAS(examples里面中的Counter例子)
    3.2CAS实现原子操作的三大问题
        3.2.1ABA问题
            解决办法：1.变量前面加版本号 2.AtomicStampedReference类
            public boolean compareAndSet(
                V   expectedReference,    //预期引用
                V   newReference,   //更新后的引用
                int expectedStamp,  //预期标志
                int newStamp    //更新后的标志
            )
        3.2.2循环时间长开销大。
            解决办法：JVM支持处理器提供的pause指令。
                指令：1.延迟流水线执行指令
                      2.避免退出循环因为内存顺序冲突而引起CPU流水线被清空
        3.2.3只能保证一个共享的原子操作
               解决办法：
                        1.合并多个共享变量为一个
                        2.把多个共享变量放在一个对象里面使用原子引用类
                        3.使用锁机制实现原子操作